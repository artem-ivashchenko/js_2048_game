{"version":3,"sources":["scripts/main.js"],"names":["boardSize","boardBody","document","querySelector","firstElementChild","score","gameButton","cells","querySelectorAll","board","r","c","cell","children","cellNumber","id","toString","updateCell","currentCell","number","innerText","classList","value","add","gameClick","e","forEach","msg","window","addEventListener","start","addNewNumber","removeEventListener","map","mas","el","remove","key","slide","merge","row","newRow","clearZeros","i","length","addZeros","getRandom","size","Math","floor","random","findNumber","some","array","element","canMove","found","getElementById","showMessage","type","filter","push","direction","slideHorizontally","slideVertically","reverse"],"mappings":"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","file":"main.09b666f5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst boardSize = 4;\n\nconst boardBody = document.querySelector('.game-field').firstElementChild;\nconst score = document.querySelector('.game-score');\nconst gameButton = document.querySelector('.start');\nconst cells = document.querySelectorAll('td');\n\nlet board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfor (let r = 0; r < boardSize; r++) {\n  for (let c = 0; c < boardSize; c++) {\n    const cell = boardBody.children[r].children[c];\n    const cellNumber = board[r][c];\n\n    cell.id = r.toString() + '-' + c.toString();\n\n    updateCell(cell, cellNumber);\n  }\n}\n\nfunction updateCell(currentCell, number) {\n  currentCell.innerText = '';\n  currentCell.classList.value = 'field-cell';\n\n  if (number > 0) {\n    currentCell.innerText = number;\n    currentCell.classList.add(`field-cell--${number}`);\n  }\n}\n\ngameButton.addEventListener('click', gameClick);\n\nfunction gameClick(e) {\n  const messages = document.querySelectorAll('.message');\n\n  messages.forEach(msg => msg.classList.add('hidden'));\n\n  if (gameButton.innerText === 'Start') {\n    window.addEventListener('keydown', start);\n    addNewNumber();\n    addNewNumber();\n\n    gameButton.removeEventListener('click', gameClick);\n  } else {\n    window.removeEventListener('keydown', start);\n\n    cells.forEach(cell => {\n      cell.innerText = '';\n      cell.classList.value = 'field-cell';\n    });\n\n    board = board.map(mas => mas.map(el => 0));\n    score.innerText = 0;\n    gameButton.classList.value = 'button start';\n    gameButton.innerText = 'Start';\n\n    const messageStart = document.querySelector('.message-start');\n\n    messageStart.classList.remove('hidden');\n  }\n};\n\nfunction start(e) {\n  if (e.key === 'ArrowLeft' || e.key === 'ArrowRight'\n      || e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n    gameButton.classList.value = 'button restart';\n    gameButton.innerText = 'Restart';\n    gameButton.addEventListener('click', gameClick);\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      slide('left');\n      break;\n    case 'ArrowRight':\n      slide('right');\n      break;\n    case 'ArrowUp':\n      slide('up');\n      break;\n    case 'ArrowDown':\n      slide('down');\n      break;\n    default:\n      break;\n  }\n}\n\nfunction merge(row) {\n  let newRow = clearZeros(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score.innerText = +score.innerText + newRow[i];\n    }\n  }\n\n  newRow = clearZeros(newRow);\n  newRow = addZeros(newRow);\n\n  return newRow;\n}\n\nfunction getRandom(size) {\n  return Math.floor(Math.random() * size);\n}\n\nfunction findNumber(number = 0) {\n  return board.some(array => {\n    return array.some(element => element === number);\n  });\n}\n\nfunction canMove() {\n  for (let r = 0; r < boardSize; r++) {\n    for (let c = 0; c < boardSize; c++) {\n      if (r < boardSize - 1 && c < boardSize - 1) {\n        if (board[r][c] === board[r][c + 1]\n          || board[r][c] === board[r + 1][c]) {\n          return true;\n        }\n      }\n\n      if (r === boardSize - 1 && c < boardSize - 1) {\n        if (board[r][c] === board[r][c + 1]) {\n          return true;\n        }\n      }\n\n      if (c === boardSize - 1 && r < boardSize - 1) {\n        if (board[r][c] === board[r + 1][c]) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction addNewNumber() {\n  if (!findNumber()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = getRandom(boardSize);\n    const c = getRandom(boardSize);\n    let random = getRandom(10);\n\n    random = random > 1 ? 2 : 4;\n\n    if (board[r][c] === 0) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n\n      board[r][c] = random;\n      cell.innerText = random;\n      cell.classList.add(`field-cell--${random}`);\n      found = true;\n    };\n  }\n}\n\nfunction showMessage(type) {\n  const message = document.querySelector(`.message-${type}`);\n\n  message.classList.remove('hidden');\n  window.removeEventListener('keydown', start);\n}\n\nfunction clearZeros(row) {\n  return row.filter(element => element !== 0);\n}\n\nfunction addZeros(row) {\n  const newRow = row;\n\n  while (newRow.length < boardSize) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slide(direction) {\n  if (direction === 'right' || direction === 'left') {\n    slideHorizontally(direction);\n  } else {\n    slideVertically(direction);\n  }\n\n  if (findNumber(2048)) {\n    showMessage('win');\n\n    return;\n  }\n\n  if (!findNumber() && !canMove()) {\n    showMessage('lose');\n\n    return;\n  }\n\n  addNewNumber();\n}\n\nfunction slideHorizontally(direction) {\n  for (let r = 0; r < boardSize; r++) {\n    let row = board[r];\n\n    if (direction === 'right') {\n      row.reverse();\n    }\n\n    row = merge(row);\n\n    if (direction === 'right') {\n      row.reverse();\n    }\n\n    board[r] = row;\n\n    for (let c = 0; c < boardSize; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const cellNumber = board[r][c];\n\n      updateCell(cell, cellNumber);\n    }\n  }\n}\n\nfunction slideVertically(direction) {\n  for (let c = 0; c < boardSize; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    if (direction === 'down') {\n      row.reverse();\n    }\n\n    row = merge(row);\n\n    if (direction === 'down') {\n      row.reverse();\n    }\n\n    for (let r = 0; r < boardSize; r++) {\n      board[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const cellNumber = board[r][c];\n\n      updateCell(cell, cellNumber);\n    }\n  }\n}\n"]}